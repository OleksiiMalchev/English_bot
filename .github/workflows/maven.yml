# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: english bot cicd

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven
      - name: Build with Maven
        run: mvn clean install
      - name: Build & push Docker image
        uses: mr-smithers-excellent/docker-build-push@v6
        with:
          image: anselis/english-bot-images
          tags: latest
          registry: docker.io
          dockerfile: Dockerfile
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Deploy to Hetzner Server
        uses: appleboy/ssh-action@v0.1.3
        with:
          host: ${{ secrets.HETZNER_HOST }}
          username: ${{ secrets.HETZNER_USERNAME }}
          password: ${{ secrets.HETZNER_PASSWORD }}
          script: |
            # ???????? ??????? ????? docker-compose.yml ????? ????????????
            if [ -f "./docker-compose.yml" ]; then
              scp ./docker-compose.yml ${{ secrets.HETZNER_USERNAME }}@${{ secrets.HETZNER_HOST }}:/home/${{ secrets.HETZNER_USERNAME }}
            else
              echo "docker-compose.yml not found!"
              exit 1
            fi

            # ???????????? ?????????? ?????????
            export DB_ROOT_PASSWORD=${{ secrets.DB_ROOT_PASSWORD }}
            export DB_USERNAME_PROD=${{ secrets.DB_USERNAME_PROD }}
            export DB_PASSWORD_PROD=${{ secrets.DB_PASSWORD_PROD }}
            export BOT_NAME_PROD=${{ secrets.BOT_NAME_PROD }}
            export BOT_TOKEN_PROD=${{ secrets.BOT_TOKEN_PROD }}
            export SPRING_PROFILES_ACTIVE=${{ secrets.SPRING_PROFILES_ACTIVE }}

            # Docker login
            echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

            # ????????? ? ?????? ??????? ?? ???????
            cd /home/${{ secrets.HETZNER_USERNAME }}

            # ??????? Docker Compose
            docker-compose pull
            docker-compose down
            docker-compose up -d
          
          
      

